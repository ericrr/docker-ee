---
- name: Install and Configure Docker Enterprise
  hosts: localhost
  become: yes
  become_user: root


  vars:
   user: ubuntu
   pathfile: /home/ubuntu
   bucketname: swarm-docker-ee
   
   # Expira em 21/05/2020
   DOCKER_EE_URL: "https://storebits.docker.com/ee/trial/sub-2d0374b1-33a3-47ab-b042-014b225f596a" 

   # Docker Version  
   DOCKER_EE_VERSION: "19.03"

  tasks:

  - name: Get Hostname 
    command: hostname
    register: name_host

  - name: Get Ip Host
    command: curl http://169.254.169.254/latest/meta-data/local-ipv4
    register: get_ip

  - name: Copy join command to local file
    local_action: copy content="{{ get_ip.stdout_lines[0] }}    {{ name_host.stdout_lines[0] }} " dest="{{ pathfile }}/{{ name_host.stdout_lines[0] }}.txt"

  - name: "Remove to S3 bucket"
    command: aws s3 rm s3://{{ bucketname }}/"{{ name_host.stdout_lines[0] }}.txt"

  - name: "copy to S3 bucket"
    command: aws s3 cp {{ pathfile }}/"{{ name_host.stdout_lines[0] }}.txt" s3://{{ bucketname }}

  - name: Get Architecture
    command: dpkg --print-architecture
    register: get_arch

  - name: Get Release
    command: lsb_release -cs
    register: get_release

  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: "{{ DOCKER_EE_URL }}/ubuntu/gpg"
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch={{ get_arch.stdout_lines[0] }}] {{ DOCKER_EE_URL}}/ubuntu {{ get_release.stdout_lines[0] }} stable-{{ DOCKER_EE_VERSION }}
      state: present

  - name: Install docker and its dependecies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ee 
      - docker-ee-cli 
      - containerd.io
    notify:
      - docker status

  - name: Add ubuntu user to docker group
    user:
      name: ubuntu
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name:  Enterprise instead of always using the latest
    command: apt-cache madison docker-ee
    register: docker_madison

#  - name: enabled, and are specific to your version of Ubuntu
#    apt:
#      name: "{{ packages }}"
#      state: present
#      update_cache: yes
#    vars:
#      packages:
#        - kubelet
#        - kubeadm
#        - kubectl

  handlers:
    - name: docker status
      service: name=docker state=started